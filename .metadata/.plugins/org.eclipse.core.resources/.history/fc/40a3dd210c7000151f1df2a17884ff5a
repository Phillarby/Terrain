//Author:       	Phil larby
//Description:  	Base class for initialisation of processing application
//
//Version History	
//===============
//10/10/2015:   Created class for migration of existing source from processing PDE to Eclipse


package TerrainBase;

import processing.core.*;

public class ProcBase extends PApplet {
	
	//Application entry point
	public static void main(String args[]) 
	{	
		//Ininitialise this as the entry point for the processing applet 
		PApplet.main(new String[] { "--present", "TerrainBase.ProcBase" });
	}
	
	//The scaffold is the starting-point for geometry generation.
	Scaffold s;
	
	//Setup Camera
	PVector _sphCo; //Spherical coordinates for camera position.  x->rho, y->theta, z->phi 
	PVector _cam; 	//Camera
	PVector _look; 	//Camera target
	
	public void settings()
	{
		this.size(1024, 1024, PConstants.P3D);
	}
	
	//Runs once on app initialisation
	public void setup()
	{
		//Create a static reference to this PApplet instance for global access.
		//Consider this may be better changed to a dependency injection model 
		//later for improved testability, but for now this will suffice. 
		Helpers.P = this;
		
		//Instantiate new scaffold;
		s = new Scaffold();
		
		//Configure Camera
		_sphCo = new PVector(500, 0, 0);
		_look = new PVector(0,0,0);
	}
	
	//Method to keep update logic separate from draw logic
	public void update()
	{
		s.update();

		//Position camera
		_cam = Helpers.SphericalToCartesian(_sphCo.x, _sphCo.y, _sphCo.z);
		Helpers.P.camera(_cam.x, _cam.y, _cam.z, _look.x, _look.y, _look.z, 0, 1, 0);
	}
	
	//Logic for draw cycle
	public void draw()
	{
		//Trigger update logic to run prior to draw logic
		update();
		
		//Set background as Black
	    background(0);
	    
	    s.draw();
	}
}
